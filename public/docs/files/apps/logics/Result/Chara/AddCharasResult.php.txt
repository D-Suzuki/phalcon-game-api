<?php

namespace Logics\Result\Chara;

use \Db\HistoryDb\AddCharasHistoryTbl;

Class AddCharasResult extends \Logics\Result\BaseResult
{

    const IS_NOT_ENOUGH = 1;

    /**
     * プレイヤーシーケンスNUM
     * @var int
     */
    private $player_seq_num = null;

    /**
     * 追加済み対象キャラIDリスト
     * @var array
     */
    private $added_chara_id_list = [];

    /**
     * 溢れ分キャラIDリスト
     * @var array
     */
    private $overflow_chara_id_list = [];

    /**
     * シーンID
     * @var int
     */
    private $scene_id = null;

    /**
     * コンストラクタ
     * @param int $player_seq_num
     * @param array $chara_id_list
     * @param int $scene_id
     */
    public function __construct(int $player_seq_num, int $scene_id)
    {
        $this->player_seq_num = $player_seq_num;
        $this->scene_id       = $scene_id;
    }

    /**
     * 溢れ分キャラID追加
     * @param int $chara_id
     */
    public function addAddedCharaId(int $chara_id)
    {
        $this->added_chara_id_list[] = $chara_id;
    }

    /**
     * 溢れ分キャラIDリスト取得
     * @return array
     */
    public function getOverflowCharaId()
    {
        return $this->overflow_chara_id_list;
    }

    /**
     * 溢れ分キャラID追加
     * @param int $chara_id
     */
    public function addOverflowCharaId(int $chara_id)
    {
        $this->overflow_chara_id_list[] = $chara_id;
    }

    /**
     * キャラ溢れ判定
     * @return boolean
     */
    public function isOverflow()
    {
        if (count($this->overflow_chara_id_list) > 0) {
            return true;
        } else {
            return false;
        }
    }

    /**
     * 履歴生成
     */
    public function createHistory()
    {
        $insert_record_list  = [];
        foreach ($this->added_chara_id_list as $chara_id) {
            $insert_record_list[] = [
                'seq_num'        => 0,
                'player_seq_num' => 0,
                'chara_id'       => $chara_id,
                'scene_id'       => $this->scene_id,
                'created_at'     => \AppRegistry::getAccessTime()->format('Y-m-d H:i:s'),
                'updated_at'     => \AppRegistry::getAccessTime()->format('Y-m-d H:i:s'),
            ];
        }

        $AddCharasHistoryTbl = \Db\Factory::getInstance(AddCharasHistoryTbl::class);
        $AddCharasHistoryTbl->bulkInsert($insert_record_list);
    }

}

