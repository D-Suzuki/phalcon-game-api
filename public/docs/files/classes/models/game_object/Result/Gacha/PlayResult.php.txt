<?php

namespace GameObject\Result\Gacha;

use GameObject\Result\Lottery\DrawResult;
use GameObject\Reward;
use Master\GachaMaster;
use Db\HistoryDb\GachaHistoryTbl;

Class PlayResult extends \GameObject\Result\BaseResult
{

	const RESULT_CODE_COMPLETE = 0;

    /**
     * プレイヤーシーケンスNUM
     * @var int
     */
	private $player_seq_num = null;

	/**
	 * ガチャID
	 * @var int
	 */
	private $gacha_id = null;

	/**
	 * ガチャ回数
	 * @var int
	 */
	private $draw_count = null;

    /**
     * コンストラクタ
     * @param int $player_seq_num
     * @param int $gacha_id
     * @param int $draw_count
     */
	public function __construct(int $player_seq_num, int $gacha_id, int $draw_count)
	{
        $this->player_seq_num = $player_seq_num;
        $this->gacha_id       = $gacha_id;
        $this->draw_count     = $draw_count;
	}

    /**
     * 抽選結果インスタンスリスト
     * @var array[] = DrawResult
     */
	private $draw_result_list = [];

    /**
     * 抽選結果インスタンス追加
     * @param DrawResult
     */
	public function addDrawResult(DrawResult $DrawResult)
	{
        $this->draw_result_list[] = $DrawResult;
	}

	/**
	 * 抽選キャラIDリスト取得
	 * @return array
	 */
	public function getDrawedCharaIdList()
	{
	    $drawed_chara_id_list = [];
        if (count($this->draw_result_list) > 0) {
            foreach ($this->draw_result_list as $DrawResult) {
                if (is_null($DrawResult->getDrawedCharaId()) === false) {
                    $drawed_chara_id_list[] = $DrawResult->getDrawedCharaId();
                }
            }
        }
        return $drawed_chara_id_list;
	}
	
	public function getDrawedItemList()
	{
	       
	}

	/**
	 * 報酬インスタンスリスト取得
	 * @return array
	 */
	public function getDrawedRewardList()
	{
	    $drawed_reward_list = [];
	    if (count($this->draw_result_list) > 0) {
	        foreach ($this->draw_result_list as $DrawResult) {
	            if (is_null($DrawResult->getDrawedItemId()) === false) {
                    $drawed_reward_list[] = new Reward(
                        Reward::REWARD_TYPE_ITEM,
                        $DrawResult->getDrawedItemId(),
                        $DrawResult->getDrawedItemCount(),
                        GachaMaster::getGiftMessage($this->gacha_id)
                    );
	            }
	        }
	    }
	}

	/**
	 * ガチャ履歴生成
	 */
	public function createHistory()
	{
	    $insert_record_list = [];
	    if (empty($this->draw_result_list) === true) {
	        throw new \Exception('draw result list is empty');
	    }
        foreach ($this->draw_result_list as $DrawResult) {
            $insert_record_list[] = [
                'seq_num'        => 0,
                'player_seq_num' => $this->player_seq_num,
                'gacha_id'       => $this->gacha_id,
                'draw_count'     => $this->draw_count,
                'lottery_id'     => $DrawResult->getLotteryId(),
                'chara_id'       => $DrawResult->getDrawedCharaId(),
                'item_id'        => $DrawResult->getDrawedItemId(),
                'item_count'     => $DrawResult->getDrawedItemCount(),
                'is_fixed'       => $DrawResult->isFixed() === true ? 1 : 0,
                'is_bonus'       => $DrawResult->isBonus() === true ? 1 : 0,
                'updated_at'     => AppRegistry::getAccessTime()->format('Y-m-d H:i:s'),
                'created_at'     => AppRegistry::getAccessTime()->format('Y-m-d H:i:s'),
            ];
        }
        $GachaHistoryTbl = \Db\Factory::getInstance(GachaHistoryTbl::class);
        $GachaHistoryTbl->bulkInsert($insert_record_list);
	}

}
